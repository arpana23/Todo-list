{"version":3,"sources":["Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Todolist","props","className","list","onClick","onEdit","id","onSelect","App","useState","inputItem","setInputItem","itemList","setItemList","updateItem","map","olditems","index","data","splice","deleteItem","filter","arrElement","type","max","min","placeholder","value","onChange","e","target","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAwBeA,EApBE,SAACC,GAGd,OACI,mCACI,qBAAKC,UAAU,SAAf,SACI,qBAAIA,UAAU,kBAAd,UACA,mBAAGA,UAAU,UAAb,SACKD,EAAME,OAEP,uBAAMD,UAAU,SAAhB,UACI,mBAAGA,UAAU,cAAeE,QAAS,WAAOH,EAAMI,OAAOJ,EAAMK,OAC/D,mBAAGJ,UAAU,eAAeE,QAAS,WAAOH,EAAMM,SAASN,EAAMK,kBC+D1EE,G,MA3EH,WAAO,IAAD,EAGmBC,mBAAS,IAH5B,mBAGTC,EAHS,KAGGC,EAHH,OAIiBF,mBAAS,IAJ1B,mBAITG,EAJS,KAIEC,EAJF,KAkBVC,EAAa,SAACR,GASlB,OARYM,EAASG,KAAI,SAACC,EAASC,EAAMC,GAKvC,OAJGD,IAAUX,IACXK,EAAaO,EAAKC,OAAOF,EAAM,IAC/BD,GAAYA,GAEP,CAACA,OAMNI,EAAa,SAACd,GAClBO,GAAY,SAACG,GACX,OAAOA,EAASK,QAAO,SAACC,EAAWL,GACjC,OAAOA,IAAUX,SASxB,OACC,mCACE,qBAAKJ,UAAU,iBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBACE,oBAAIA,UAAU,oBAAd,uBACF,uBACA,gCACE,uBAAOqB,KAAK,OAAOrB,UAAU,WAAWsB,IAAI,KAAKC,IAAI,IAAIC,YAAY,YAAYC,MAAOjB,EAAWkB,SA7CxF,SAACC,GACpBlB,EAAakB,EAAEC,OAAOH,UA6Cd,wBAAQJ,KAAK,SAASrB,UAAU,MAAME,QA1C/B,SAACyB,GAChBA,EAAEE,iBACFlB,GAAY,SAACG,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAqBN,OAEvBC,EAAa,KAqCL,mBACA,oBAAIT,UAAU,aAAd,SAEIU,EAASG,KAAI,SAACG,EAAKD,GACjB,OAAO,cAAC,EAAD,CAEPX,GAAKW,EACLd,KAAOe,EACPb,OAASS,EACTP,SAAWa,GAJLH,sBCjDTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b16f20a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Todolist = (props) => {\r\n\r\n   \r\n    return (\r\n        <>  \r\n            <div className=\"mylist\"> \r\n                <li className=\"list-group-item\"> \r\n                <i className=\"my-text\">\r\n                    {props.list} \r\n                </i>\r\n                    <span className=\"ed-del\"> \r\n                        <i className=\"fas fa-edit\"  onClick={() => {props.onEdit(props.id)}}></i>\r\n                        <i className=\"fas fa-trash\" onClick={() => {props.onSelect(props.id)}}></i> \r\n                    </span> \r\n                </li>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todolist;","import React, { useState } from 'react';\nimport Todolist from './Todolist';\nimport './App.css';\n\nconst App = () => {\n\n\n  const [inputItem , setInputItem] = useState(\"\");\n  const [itemList , setItemList] = useState([]);\n\n  const handleChange = (e) => {\n    setInputItem(e.target.value);\n  }\n\n  const addItems = (e) => {\n    e.preventDefault();\n    setItemList((olditems) => {\n      return [...olditems, inputItem];\n    });\n    setInputItem(\"\");\n  }\n\n  const updateItem = (id) => {\n    let item =  itemList.map((olditems,index,data) => {\n      if(index === id) {\n        setInputItem(data.splice(index,1));\n        olditems = !olditems;\n      }\n      return [olditems];\n      }\n    )\n    return item;\n  }\n  \n  const deleteItem = (id) => {\n    setItemList((olditems) => {\n      return olditems.filter((arrElement,index) => {\n        return index !== id;\n        // if(index !== id) {\n        //   return [...arrElement];\n        // }\n      })\n    })\n  }\n\n\n return (\n  <>\n    <div className=\"main-container\">\n      <div className=\"flex-container\">\n        <div className=\"well\">\n          <br />\n            <h1 className=\"title text-center\">Todo List</h1>\n          <br />\n          <div>\n            <input type=\"text\" className=\"addInput\" max=\"10\" min=\"1\" placeholder=\"Add items\" value={inputItem} onChange={handleChange}/>\n            <button type=\"submit\" className=\"btn\" onClick={addItems}> Add </button>\n            <ul className=\"list-group\">\n              {\n                itemList.map((data,index) => {\n                  return <Todolist \n                  key= {index} \n                  id= {index} \n                  list= {data} \n                  onEdit= {updateItem}\n                  onSelect= {deleteItem} \n                  />\n                })\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n        \n  </>\n )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}